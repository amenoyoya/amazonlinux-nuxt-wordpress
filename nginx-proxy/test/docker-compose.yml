version: "3"

services:
  # プロキシサーバ
  nginx-proxy:
    image: jwilder/nginx-proxy
    privileged: true # ルート権限
    ports:
      - "80:80" # http
      - "443:443" # https
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock:ro
      - /usr/share/nginx/html
      - /etc/nginx/vhost.d
      - ./docker/certs:/etc/nginx/certs:ro # letsencryptコンテナが ./docker/certs/ に作成したSSL証明書を読む
    # restart: always # Dockerサービス起動時に自動起動
    # 他のコンテナを見つけられるようにブリッジモードにする（見つけて欲しいコンテナもブリッジモードにする）
    ## もしくは共有のネットワークを作成する
    network_mode: bridge
    environment:
      DHPARAM_GENERATION: "false"
    labels:
      com.github.jrcs.letsencrypt_nginx_proxy_companion.nginx_proxy: "true"

  # 無料SSL証明書発行
  letsencrypt:
    image: jrcs/letsencrypt-nginx-proxy-companion
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - /usr/share/nginx/html
      - /etc/nginx/vhost.d
      - ./docker/certs:/etc/nginx/certs:rw # ./docker/certs/ にSSL証明書を書き込めるように rw モードで共有
    depends_on:
      - nginx-proxy # nginx-proxyコンテナの後で起動
    # restart: always # Dockerサービス起動時に自動起動
    network_mode: bridge
    environment:
      NGINX_PROXY_CONTAINER: nginx-proxy
  
  # PHP + Apcahe サーバ
  web:
    build: ./docker/web # ./docker/web/Dockerfile からビルド
    volumes:
      # ドキュメントルート: ./web-data/ => docker://web:/var/wwww/html/
      - ./web-data/:/var/www/html
      # virtualhost設定ファイル
      - ./docker/web/000-default.conf:/etc/apache2/sites-available/000-default.conf
      # php設定ファイルを共有
      - ./docker/web/php.ini:/usr/local/etc/php/php.ini
    # コンテナ内のApache実行ユーザー`www-data`のユーザーIDを環境変数`UID`に変更してApache起動
    command: bash -c 'usermod -o -u ${UID} www-data; groupmod -o -g ${UID} www-data; apachectl -D FOREGROUND'
    network_mode: bridge
    environment:
      # Composer設定
      COMPOSER_ALLOW_SUPERUSER: 1 # root権限での実行を許可
      COMPOSER_NO_INTERACTION: 1  # 非対話的にインストール
      
      # VIRTUAL_HOST設定（nginx-proxy）
      VIRTUAL_HOST: web.local # http://web.local => docker://web:80
      VIRTUAL_PORT: 80
      
      # 本番環境ではコメントアウトを外し Let's Encrypt 申請させる
      # LETSENCRYPT_HOST: web.local # https://web.local
      # LETSENCRYPT_EMAIL: admin@web.local

      # 本番環境ではコメントアウトする
      CERT_NAME: default
